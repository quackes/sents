/**
 * 
 * [AHOI cookbook](/ahoi/docs/cookbook/index.html)  [Data Privacy](/sandboxmanager/#/privacy)  [Terms of Service](/sandboxmanager/#/terms)  [Imprint](https://sparkassen-hub.com/impressum/)  &copy; 2016&dash;2017 Starfinanz - Ein Unternehmen der Finanz Informatik
 *
 * OpenAPI spec version: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The Account model module.
* @module model/Account
* @version 2.1.0
*/
export default class Account {
    /**
    * Constructs a new <code>Account</code>.
    * @alias module:model/Account
    * @class
    * @param id {String} Internal ID of this account (generated value)
    * @param name {String} Account name returned by bank provider (e.g., \"Giro Account\")
    * @param owner {String} Account owner returned by bank provider (e.g., \"Max Mustermann\")
    * @param providerId {String} Identifier of the provider to which this account belongs
    * @param kind {module:model/Account.KindEnum} An account kind is a classification of its structure and its possibilities.   This is typically defined by the bank provider.
    * @param automaticRefreshInterval {Number} Interval that indicates the freguency of which the account is updated.   This interval is read-only and is determined by the server depending on the last use of the API. The range is between every hour, daily and monthly.
    * @param type {String} Discriminator for subtypes. At the moment only `BankAccount` is supported.
    */

    constructor(id, name, owner, providerId, kind, automaticRefreshInterval, type) {
        

        
        

        this['id'] = id;this['name'] = name;this['owner'] = owner;this['providerId'] = providerId;this['kind'] = kind;this['automaticRefreshInterval'] = automaticRefreshInterval;this['type'] = type;

        
    }

    /**
    * Constructs a <code>Account</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Account} obj Optional instance to populate.
    * @return {module:model/Account} The populated <code>Account</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Account();

            
            
            

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('userDefinedName')) {
                obj['userDefinedName'] = ApiClient.convertToType(data['userDefinedName'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('providerId')) {
                obj['providerId'] = ApiClient.convertToType(data['providerId'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('automaticRefreshInterval')) {
                obj['automaticRefreshInterval'] = ApiClient.convertToType(data['automaticRefreshInterval'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
    * Internal ID of this account (generated value)
    * @member {String} id
    */
    id = undefined;
    /**
    * Account name returned by bank provider (e.g., \"Giro Account\")
    * @member {String} name
    */
    name = undefined;
    /**
    * Account userDefinedName. This value can be set to define a custom name used in AHOI (e.g., \"My Giro Account\").  Can be changed by using the account resource.
    * @member {String} userDefinedName
    */
    userDefinedName = undefined;
    /**
    * Account owner returned by bank provider (e.g., \"Max Mustermann\")
    * @member {String} owner
    */
    owner = undefined;
    /**
    * Identifier of the provider to which this account belongs
    * @member {String} providerId
    */
    providerId = undefined;
    /**
    * An account kind is a classification of its structure and its possibilities.   This is typically defined by the bank provider.
    * @member {module:model/Account.KindEnum} kind
    */
    kind = undefined;
    /**
    * Interval that indicates the freguency of which the account is updated.   This interval is read-only and is determined by the server depending on the last use of the API. The range is between every hour, daily and monthly.
    * @member {Number} automaticRefreshInterval
    */
    automaticRefreshInterval = undefined;
    /**
    * Discriminator for subtypes. At the moment only `BankAccount` is supported.
    * @member {String} type
    */
    type = undefined;






    /**
    * Allowed values for the <code>kind</code> property.
    * @enum {String}
    * @readonly
    */
    static KindEnum = {
    
        /**
         * value: "GIRO"
         * @const
         */
        "GIRO": "GIRO",
    
        /**
         * value: "SPAR"
         * @const
         */
        "SPAR": "SPAR",
    
        /**
         * value: "FESTGELD"
         * @const
         */
        "FESTGELD": "FESTGELD",
    
        /**
         * value: "DEPOT"
         * @const
         */
        "DEPOT": "DEPOT",
    
        /**
         * value: "DARLEHEN"
         * @const
         */
        "DARLEHEN": "DARLEHEN",
    
        /**
         * value: "KREDITKARTE"
         * @const
         */
        "KREDITKARTE": "KREDITKARTE",
    
        /**
         * value: "BAUSPAR"
         * @const
         */
        "BAUSPAR": "BAUSPAR",
    
        /**
         * value: "VL_SPAR"
         * @const
         */
        "VL_SPAR": "VL_SPAR",
    
        /**
         * value: "VL_BAUSPAR"
         * @const
         */
        "VL_BAUSPAR": "VL_BAUSPAR",
    
        /**
         * value: "VL_WERTPAPIERSPARVERTRAG"
         * @const
         */
        "VL_WERTPAPIERSPARVERTRAG": "VL_WERTPAPIERSPARVERTRAG",
    
        /**
         * value: "XXX"
         * @const
         */
        "XXX": "XXX"    
    };



}


