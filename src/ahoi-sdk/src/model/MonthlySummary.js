/**
 * 
 * [AHOI cookbook](/ahoi/docs/cookbook/index.html)  [Data Privacy](/sandboxmanager/#/privacy)  [Terms of Service](/sandboxmanager/#/terms)  [Imprint](https://sparkassen-hub.com/impressum/)  &copy; 2016&dash;2017 Starfinanz - Ein Unternehmen der Finanz Informatik
 *
 * OpenAPI spec version: 2.1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';
import Amount from './Amount';





/**
* The MonthlySummary model module.
* @module model/MonthlySummary
* @version 2.1.0
*/
export default class MonthlySummary {
    /**
    * Constructs a new <code>MonthlySummary</code>.
    * @alias module:model/MonthlySummary
    * @class
    * @param id {String} MonthlySummary id in UUID form
    * @param month {String} The month this entry belongs to (year-month in the ISO-8601: \"yyyy-MM\")
    * @param accountId {String} Id of account this entry belongs to
    * @param income {module:model/Amount} Sum of all incoming transactions for this month
    * @param outgoings {module:model/Amount} Sum of all outgoing transactions for this month
    * @param balance {module:model/Amount} Balance at end of month
    */

    constructor(id, month, accountId, income, outgoings, balance) {
        

        
        

        this['id'] = id;this['month'] = month;this['accountId'] = accountId;this['income'] = income;this['outgoings'] = outgoings;this['balance'] = balance;

        
    }

    /**
    * Constructs a <code>MonthlySummary</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/MonthlySummary} obj Optional instance to populate.
    * @return {module:model/MonthlySummary} The populated <code>MonthlySummary</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MonthlySummary();

            
            
            

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('month')) {
                obj['month'] = ApiClient.convertToType(data['month'], 'String');
            }
            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'String');
            }
            if (data.hasOwnProperty('income')) {
                obj['income'] = Amount.constructFromObject(data['income']);
            }
            if (data.hasOwnProperty('outgoings')) {
                obj['outgoings'] = Amount.constructFromObject(data['outgoings']);
            }
            if (data.hasOwnProperty('balance')) {
                obj['balance'] = Amount.constructFromObject(data['balance']);
            }
        }
        return obj;
    }

    /**
    * MonthlySummary id in UUID form
    * @member {String} id
    */
    id = undefined;
    /**
    * The month this entry belongs to (year-month in the ISO-8601: \"yyyy-MM\")
    * @member {String} month
    */
    month = undefined;
    /**
    * Id of account this entry belongs to
    * @member {String} accountId
    */
    accountId = undefined;
    /**
    * Sum of all incoming transactions for this month
    * @member {module:model/Amount} income
    */
    income = undefined;
    /**
    * Sum of all outgoing transactions for this month
    * @member {module:model/Amount} outgoings
    */
    outgoings = undefined;
    /**
    * Balance at end of month
    * @member {module:model/Amount} balance
    */
    balance = undefined;








}


